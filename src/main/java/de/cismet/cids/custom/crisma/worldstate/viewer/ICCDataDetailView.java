/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.crisma.worldstate.viewer;

import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import org.apache.log4j.Logger;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

import org.openide.util.NbBundle;

import java.awt.Color;
import java.awt.GridLayout;

import java.util.Map;

import javax.swing.JComponent;

import de.cismet.cids.dynamics.CidsBean;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class ICCDataDetailView extends AbstractDetailView {

    //~ Static fields/initializers ---------------------------------------------

    /** LOGGER. */
    private static final transient Logger LOG = Logger.getLogger(ICCDataDetailView.class);

    //~ Instance fields --------------------------------------------------------

    private final transient ICCDataDetailMiniatureView mView = new ICCDataDetailMiniatureView();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form ICCDataDetailView.
     */
    public ICCDataDetailView() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(NbBundle.getMessage(ICCDataDetailView.class, "ICCDataDetailView.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${worldstate.iccdata.name}"),
                jLabel2,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        jLabel3.setText(NbBundle.getMessage(ICCDataDetailView.class, "ICCDataDetailView.jLabel3.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel3, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(
                org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
                this,
                org.jdesktop.beansbinding.ELProperty.create("${worldstate.iccdata.description}"),
                jLabel4,
                org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel4, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(
                NbBundle.getMessage(ICCDataDetailView.class, "ICCDataDetailView.jPanel1.border.title"))); // NOI18N
        jPanel1.setLayout(new java.awt.GridLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel1, gridBagConstraints);

        bindingGroup.bind();
    } // </editor-fold>//GEN-END:initComponents
    @Override
    public JComponent getView() {
        return this;
    }

    @Override
    public JComponent getMiniatureView() {
        return mView;
    }

    @Override
    public void setWorldstate(final CidsBean worldstate) {
        super.setWorldstate(worldstate);
        mView.setWorldstate(worldstate);
        init();
        bindingGroup.unbind();
        bindingGroup.bind();
    }

    @Override
    public String getId() {
        return "iccdata_view";
    }

    @Override
    public String getDisplayName() {
        return "ICC Data";
    }

    /**
     * DOCUMENT ME!
     */
    private void init() {
        final String json = (String)getWorldstate().getProperty("iccdata.actualaccessinfo");
        final ObjectMapper m = new ObjectMapper(new JsonFactory());
        final TypeReference<Map<String, Map<String, String>>> ref =
            new TypeReference<Map<String, Map<String, String>>>() {
            };
        try {
            final Map<String, Map<String, String>> props = m.readValue(json, ref);
            final GridLayout grid = new GridLayout(1, props.size(), 5, 5);
            jPanel1.setLayout(grid);

            for (final String s : props.keySet()) {
                final Map<String, String> kv = props.get(s);
                final String catName = kv.get("displayName");
                final Integer value = Integer.parseInt(kv.get("value"));

                final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
                dataset.addValue(value, catName, catName);

                final JFreeChart chart = ChartFactory.createBarChart3D(
                        catName,
                        catName,
                        "Value",
                        dataset,
                        PlotOrientation.VERTICAL,
                        false,
                        false,
                        false);

                chart.getCategoryPlot().getRenderer().setSeriesPaint(0, Color.CYAN);
                chart.getCategoryPlot().getRangeAxis().setAutoRange(false);
                chart.getCategoryPlot().getRangeAxis().setUpperBound(500);
                jPanel1.add(new ChartPanel(chart, true, false, false, false, true));
            }
        } catch (Exception ex) {
            LOG.error("cannot init icc data view", ex);
        }
    }
}
