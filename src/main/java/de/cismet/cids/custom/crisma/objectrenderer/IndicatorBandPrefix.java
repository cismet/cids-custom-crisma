/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.crisma.objectrenderer;

import org.openide.util.NbBundle;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.Path2D;

import java.text.NumberFormat;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import de.cismet.tools.gui.jbands.BandModelEvent;
import de.cismet.tools.gui.jbands.interfaces.BandModelListener;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public final class IndicatorBandPrefix extends javax.swing.JPanel implements BandModelListener {

    //~ Instance fields --------------------------------------------------------

    private final IndicatorBand band;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel lblIndValue;
    private JLabel lblLos;
    private JLabel lblName;
    private JPanel pnlLBound;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form IndicatorBandPostfix.
     *
     * @param  band  DOCUMENT ME!
     * @param  name  DOCUMENT ME!
     */
    public IndicatorBandPrefix(final IndicatorBand band, final String name) {
        initComponents();

        this.band = band;

        setIndicatorName(name);

        ((LowerBoundPanel)pnlLBound).updateIndValue();
        this.band.getModel().addBandModelListener(this);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @return  DOCUMENT ME!
     */
    public String getIndicatorName() {
        return lblName.getText();
    }

    /**
     * DOCUMENT ME!
     *
     * @param  name  DOCUMENT ME!
     */
    public void setIndicatorName(final String name) {
        lblName.setText(name);
    }

    @Override
    public void bandModelChanged(final BandModelEvent e) {
        bandModelValuesChanged(e);
    }

    @Override
    public void bandModelSelectionChanged(final BandModelEvent e) {
        // noop
    }

    @Override
    public void bandModelValuesChanged(final BandModelEvent e) {
        ((LowerBoundPanel)pnlLBound).updateIndValue();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        lblName = new JLabel();
        pnlLBound = new LowerBoundPanel();
        lblLos = new JLabel();
        lblIndValue = new JLabel();

        setLayout(new GridBagLayout());

        lblName.setText(NbBundle.getMessage(IndicatorBandPrefix.class, "IndicatorBandPrefix.lblName.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(lblName, gridBagConstraints);

        pnlLBound.setCursor(new Cursor(Cursor.HAND_CURSOR));
        pnlLBound.setMinimumSize(new Dimension(80, 32));
        pnlLBound.setOpaque(false);
        pnlLBound.setPreferredSize(new Dimension(80, 32));
        pnlLBound.setLayout(new GridBagLayout());

        lblLos.setFont(new Font("Lucida Grande", 0, 9));                                                   // NOI18N
        lblLos.setText(NbBundle.getMessage(IndicatorBandPrefix.class, "IndicatorBandPrefix.lblLos.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new Insets(2, 4, 1, 0);
        pnlLBound.add(lblLos, gridBagConstraints);

        lblIndValue.setFont(new Font("Lucida Grande", 0, 9));                                                        // NOI18N
        lblIndValue.setText(NbBundle.getMessage(IndicatorBandPrefix.class, "IndicatorBandPrefix.lblIndValue.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new Insets(1, 4, 2, 0);
        pnlLBound.add(lblIndValue, gridBagConstraints);

        add(pnlLBound, new GridBagConstraints());
    } // </editor-fold>//GEN-END:initComponents

    //~ Inner Classes ----------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @version  $Revision$, $Date$
     */
    private final class LowerBoundPanel extends JPanel implements MouseListener {

        //~ Constructors -------------------------------------------------------

        /**
         * Creates a new LowerBoundPanel object.
         */
        public LowerBoundPanel() {
            addMouseListener(this);
        }

        //~ Methods ------------------------------------------------------------

        @Override
        protected void paintComponent(final Graphics g) {
            super.paintComponent(g);

            final Graphics2D g2 = (Graphics2D)g.create();

            final int w = getWidth() - 1;
            final int h = 29;

            final Path2D.Float path = new Path2D.Float();
            path.moveTo(0, 0);
            path.lineTo(w, 0);
            path.lineTo(w, h);
            path.lineTo(0, h);
            path.lineTo(4, 24);
            path.lineTo(0, 19);
            path.lineTo(4, 14);
            path.lineTo(0, 9);
            path.lineTo(4, 4);
            path.lineTo(0, 0);
            path.closePath();

            g2.setColor(IndicatorBand.getBandColor(1, 0));
            g2.fill(path);
            g2.setColor(Color.BLACK);
            g2.drawLine(0, 0, w, 0);
            g2.drawLine(w, 0, w, h);
            g2.drawLine(w, h, 0, h);

            g2.dispose();
        }

        @Override
        public void setSize(final Dimension d) {
            super.setSize(new Dimension((d.width < 30) ? 30 : d.width, 30));
        }

        @Override
        public void setSize(final int width, final int height) {
            super.setSize((width < 30) ? 30 : width, 30);
        }

        @Override
        public void setMinimumSize(final Dimension d) {
            super.setMinimumSize(new Dimension((d.width < 30) ? 30 : d.width, 30));
        }

        @Override
        public void setMaximumSize(final Dimension d) {
            super.setMaximumSize(new Dimension((d.width < 30) ? 30 : d.width, 30));
        }

        @Override
        public void setPreferredSize(final Dimension d) {
            super.setPreferredSize(new Dimension((d.width < 30) ? 30 : d.width, 30));
        }

        @Override
        public void mouseClicked(final MouseEvent e) {
            if (!e.isPopupTrigger()) {
                JOptionPane.showMessageDialog(
                    this,
                    new CriteriaBoundaryPopup(band.getZeroGroup(), true),
                    "Criteria Bounds",
                    JOptionPane.PLAIN_MESSAGE,
                    null);
                band.getModel().fireBandModelChanged();
            }
        }

        @Override
        public void mousePressed(final MouseEvent e) {
            // noop
        }

        @Override
        public void mouseReleased(final MouseEvent e) {
            // noop
        }

        @Override
        public void mouseEntered(final MouseEvent e) {
            // noop
        }

        @Override
        public void mouseExited(final MouseEvent e) {
            // noop
        }

        /**
         * DOCUMENT ME!
         */
        public void updateIndValue() {
            lblIndValue.setText(((band.getHundredGroup().getValue() > band.getZeroGroup().getValue()) ? "<= " : ">= ")
                        + NumberFormat.getNumberInstance().format(band.getZeroGroup().getValue()));
            this.setToolTipText("Indicator value: "
                        + NumberFormat.getNumberInstance().format(band.getZeroGroup().getValue())
                        + " "
                        + band.getZeroGroup().getUnit());
        }
    }
}
