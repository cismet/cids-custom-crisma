/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
package de.cismet.cids.custom.crisma.objectrenderer;

import org.openide.util.NbBundle;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;

import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * DOCUMENT ME!
 *
 * @author   mscholl
 * @version  $Revision$, $Date$
 */
public class CriteriaBoundaryPopup extends javax.swing.JPanel {

    //~ Instance fields --------------------------------------------------------

    private final CriteriaGroup group;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JSpinner jspInd;
    private JSpinner jspLoS;
    private JLabel lblUnit;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form CriteriaBoundaryPopup.
     *
     * @param  group  DOCUMENT ME!
     * @param  roLos  DOCUMENT ME!
     */
    public CriteriaBoundaryPopup(final CriteriaGroup group, final boolean roLos) {
        this.group = group;

        initComponents();

        jspLoS.setValue(group.getLevelOfSatisfaction());
        lblUnit.setText(group.getUnit());
        jspInd.setValue(group.getValue());
        if (roLos) {
            jspLoS.setEnabled(false);
        }

        jspInd.addChangeListener(new ChangeListener() {

                @Override
                public void stateChanged(final ChangeEvent e) {
                    if (group != null) {
                        group.setValue((double)jspInd.getValue());
                    }
                }
            });
        jspLoS.addChangeListener(new ChangeListener() {

                @Override
                public void stateChanged(final ChangeEvent e) {
                    if (group != null) {
                        group.setLevelOfSatisfaction((int)jspLoS.getValue());
                    }
                }
            });
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        jLabel1 = new JLabel();
        jspLoS = new JSpinner();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        lblUnit = new JLabel();
        jspInd = new JSpinner();

        setPreferredSize(new Dimension(350, 76));
        setLayout(new GridBagLayout());

        jLabel1.setText(NbBundle.getMessage(CriteriaBoundaryPopup.class, "CriteriaBoundaryPopup.jLabel1.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(jLabel1, gridBagConstraints);

        jspLoS.setModel(new SpinnerNumberModel(0, 0, 100, 1));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.EAST;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(jspLoS, gridBagConstraints);

        jLabel2.setText(NbBundle.getMessage(CriteriaBoundaryPopup.class, "CriteriaBoundaryPopup.jLabel2.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(jLabel2, gridBagConstraints);

        jLabel3.setText(NbBundle.getMessage(CriteriaBoundaryPopup.class, "CriteriaBoundaryPopup.jLabel3.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(jLabel3, gridBagConstraints);

        lblUnit.setText(NbBundle.getMessage(CriteriaBoundaryPopup.class, "CriteriaBoundaryPopup.lblUnit.text")); // NOI18N
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(lblUnit, gridBagConstraints);

        jspInd.setModel(new SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        jspInd.setPreferredSize(new Dimension(65, 28));
        jspInd.setSize(new Dimension(65, 28));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new Insets(5, 5, 5, 5);
        add(jspInd, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents
}
